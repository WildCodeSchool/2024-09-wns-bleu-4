services:
    db:
        image: postgres
        environment:
            POSTGRES_DB: postgres
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: example
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready -d postgres -U postgres']
            interval: 1s
            timeout: 10s
            retries: 50
    adminer:
        image: adminer
        depends_on:
            db:
                condition: service_healthy
    backend:
        image: jeynox/staging_back
        expose:
            - 4000
        environment:
            - NODE_ENV=production
            - SERVER_PORT=4000
        env_file:
            - ./.env
        depends_on:
            - db
    frontend:
        image: jeynox/staging_front
        volumes:
            - web-front-build:/app/dist
        environment:
            - NODE_ENV=production  
    storage-api:
        image: jeynox/staging_storage
        environment:
            - NODE_ENV=production
        expose:
            - 3000

    api_gateway:
        image: nginx
        volumes:
            - ./nginx.conf:/etc/nginx/nginx.conf
            - web-front-build:/web-front-build
            - ./logs:/var/log/nginx
        ports:
            - 7008:80
volumes:
  web-front-build:

  