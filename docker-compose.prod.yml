services:
    db:
        image: postgres
        environment:
            POSTGRES_DB: postgres
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: example
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready -d postgres -U postgres']
            interval: 1s
            timeout: 10s
            retries: 50
    adminer:
        image: adminer
        depends_on:
            db:
                condition: service_healthy
    backend:
        build:
            context: ./backend
            dockerfile: Dockerfile.prod
        healthcheck:
            test: 'curl --fail --request POST --header ''content-type: application/json'' --url ''http://localhost:4000'' --data ''{"query":"query { __typename }"}'' || exit 1'
            interval: 1s
            timeout: 10s
            retries: 100
        env_file:
            - ./backend/.env
        depends_on:
            db:
                condition: service_healthy
    frontend:
        build: 
            context: ./frontend
            dockerfile: Dockerfile.prod
        
        depends_on:
            backend:
                condition: service_healthy
        healthcheck:
            test: "curl --fail --request GET --url 'http://localhost:5173' || exit 1"
            interval: 1s
            timeout: 10s
            retries: 100
    storage-api:
        build: 
            context: ./storage-api
            dockerfile: Dockerfile.prod
        healthcheck:
            test: "curl --fail --request GET --max-time 5 --url 'http://localhost:3000' || exit 1"
            interval: 5s
            timeout: 20s
            retries: 50
        ports:
            - 3000:3000

    api_gateway:
        image: nginx
        volumes:
            - ./nginx.conf:/etc/nginx/nginx.conf
            - ./storage-api/uploads:/app/uploads
        depends_on:
            backend:
                condition: service_healthy
            frontend:
                condition: service_healthy
        ports:
            - 7007:80
